def Lu2():
  modbus_add_signal("192.168.0.9", 255, 402, 2, "MODBUS_1", False)
  modbus_set_signal_update_frequency("MODBUS_1", 10)
  modbus_add_signal("192.168.0.9", 255, 260, 2, "MODBUS_2", False)
  modbus_set_signal_update_frequency("MODBUS_2", 10)
  modbus_add_signal("192.168.0.29", 255, 1036, 1, "MODBUS_3", False)
  modbus_set_signal_update_frequency("MODBUS_3", 10)
  modbus_add_signal("192.168.0.29", 255, 1007, 3, "MODBUS_4", False)
  modbus_set_signal_update_frequency("MODBUS_4", 10)
  modbus_add_signal("192.168.0.29", 255, 1073, 2, "totem_1", False)
  modbus_set_signal_update_frequency("totem_1", 10)
  modbus_add_signal("192.168.0.29", 255, 1071, 2, "AGV", False)
  modbus_set_signal_update_frequency("AGV", 10)
  modbus_add_signal("192.168.0.29", 255, 1008, 1, "MODBUS_6", False)
  modbus_set_signal_update_frequency("MODBUS_6", 10)
  modbus_add_signal("192.168.0.29", 255, 1071, 3, "AGVS", False)
  modbus_set_signal_update_frequency("AGVS", 10)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_tool_voltage(0)
  set_input_actions_to_default()
  modbus_set_runstate_dependent_choice("MODBUS_3",0)
  modbus_set_runstate_dependent_choice("MODBUS_4",0)
  modbus_set_runstate_dependent_choice("MODBUS_6",0)
  modbus_set_runstate_dependent_choice("AGVS",0)
  set_tcp(p[0.0,0.0,0.0,0.10937339116554728,3.13809698370617,-0.002214827413526083])
  set_payload(0.0, [0.0, 0.0, 0.0])
  set_gravity([0.0, 0.0, 9.82])
  global plane_1=[0, 0, 0, 0, 0, 0]
  global feature_plane=[0.92991, -0.20146, -0.00927, -0.00929, 0.00661, 0.00722]
  global Plane_1=p[-0.10879371779744619,-0.7749624733619729,-0.007763904479110137,-0.0010155215865217408,8.01704997202092E-4,-9.124332065346547E-4]
  global Point_1=p[-0.10879371779744619,-0.7749624733619729,-0.007763904479110137,1.171507412366327,1.0552676018788516,-0.9998056944719331]
  global plano_seg_post=p[0.7262933715464818,0.033143115886078836,-0.06968318201858939,0.04138727186802139,-2.251668413328048,-2.139326867460174]
  def paso_intermedi():
    global pp= get_actual_joint_positions ()
    pp[4]=pp[4]-1.57
    movej(pp, a=1.3962634015954636, v=1.0471975511965976)
    set_standard_digital_out(0, True)
    modbus_set_output_signal("MODBUS_6", True)
    set_tcp(p[0.0,0.0,0.0,-0.004126568203085262,-0.013723695463132752,2.874234475198318])
    sleep(0.2)
    modbus_set_output_signal("MODBUS_6", False)
    set_tcp(p[0.0,0.0,0.0,-0.004126568203085262,-0.013723695463132752,2.874234475198318])
    sleep(5.0)
  end
  def paso_intermedio2():
    movej([0.4208120282388981, -2.259555650531273, -2.631936289636478, -1.3905449163106347, -1.1590372014251251, 1.841323770276663], a=1.3962634015954636, v=1.0471975511965976)
    movel([-0.42188055166445526, -2.2461004172006387, -2.3711648641272314, -1.668247523608855, -2.002132483585287, 1.8385627361301644], a=1.2, v=0.3)
    movel([-0.23026946426127903, -2.403596633406625, -1.8114483956414382, -2.0705444963657147, -1.8105283653752453, 1.8346215225345546], a=1.2, v=0.3)
    global p2_1= get_actual_tcp_pose ()
  end
  def ptointerseccion():
    global aa= get_actual_joint_positions ()
    def pto_interseccion(y1,y2,x1,x2):
    m1=(y2[1]-y1[1])/(y2[0]-y1[0])
    m2=(x2[1]-x1[1])/(x2[0]-x1[0])
    global ptoint_x =(y1[1]-x1[1]-m1*y1[0]+m2*x1[0])/(m2-m1)
    global ptoint_y=y1[1]+m1*(ptoint_x-y1[0])
    global ptoint=p[ptoint_x,ptoint_y,y1[2],y1[3],y1[4],y1[5]]
    return ptoint
    end
    global ptoint=pto_interseccion(y2,y1,x2,x1)
  end
  def Buscar_plataforma():
    global caso=modbus_get_signal_status("totem_1")
    switch_1 = caso
    if (1 == switch_1):
      movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], var_1), a=1.2, v=0.1)
      global ii= get_actual_joint_positions ()
      ii[5]=ii[5]+3.1415
      movej(ii, a=1.3962634015954636, v=1.0471975511965976)
      global var_2= get_actual_tcp_pose ()
      set_standard_digital_out(0, False)
      movel(pose_add(get_forward_kin(), pose_sub(p[.477076994846, -.248719970962, .020229913321, 2.208563105192, -.034660055119, 2.214497461997], p[.843563788491, -.258053419918, .021300176398, 2.208311593868, -.034608649241, 2.214762684049])), a=1.2, v=0.1)
      movel(pose_add(get_forward_kin(), pose_sub(p[.481674569369, -.069093509059, .021308726208, 2.208588911263, -.034666458590, 2.214635285834], p[.477078540702, -.248735372065, .020238073081, 2.208536190408, -.034736842680, 2.214496547868])), a=1.2, v=0.1)
      movel(pose_add(get_forward_kin(), pose_sub(p[.515007456274, -.074153533110, .021338573945, 2.208451028374, -.034618173273, 2.214531485887], p[.481652376502, -.069082677720, .021329303726, 2.208544575849, -.034660328374, 2.214745590003])), a=1.2, v=0.1)
      movel(pose_add(get_forward_kin(), pose_sub(p[.515511083012, -.073146842039, -.146808993570, 2.208498684046, -.034542058507, 2.214554974852], p[.514982423646, -.074144407312, .021326657244, 2.208555918838, -.034679465502, 2.214481334411])), a=1.2, v=0.1)
      set_standard_digital_out(0, True)
      sleep(2.0)
      movel(pose_add(get_forward_kin(), pose_sub(p[.515111459841, -.073930320816, -.005428534827, 2.208385065095, -.034422107192, 2.214566499956], p[.517055036578, -.075863853865, -.147732795837, 2.209460445826, -.032128302634, 2.215798211639])), a=1.2, v=0.1)
      movej([0.2898976595413996, -2.0907223107341375, -2.5185725835239765, -1.6107448956676924, 0.28920811744611585, 4.932413531649132], a=1.3962634015954636, v=1.0471975511965976)
      movej([0.5649981442591315, -2.0912153666722073, -2.506361040912911, -1.6511397633621527, 0.5640064881758765, 4.965000554505918], a=1.3962634015954636, v=1.0471975511965976)
      movej([0.5620939213512619, -2.403216756073614, -2.4499683057322597, -1.393437386134714, 0.560382957808021, 4.962507017134994], a=1.3962634015954636, v=1.0471975511965976)
      set_standard_digital_out(0, False)
      sleep(2.0)
      movej([0.5649950796552982, -2.091544597824341, -2.5063015339818318, -1.6508678297956862, 0.5640026645420134, 4.964997923267054], a=1.3962634015954636, v=1.0471975511965976)
    elif (2 == switch_1):
      movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], var_1), a=1.2, v=0.05)
      global ii= get_actual_joint_positions ()
      ii[5]=ii[5]+3.1415
      movej(ii, a=1.3962634015954636, v=1.0471975511965976)
      global var_2= get_actual_tcp_pose ()
      set_standard_digital_out(0, False)
      halt
      movel(pose_add(get_forward_kin(), pose_sub(p[.479698355474, -.227206122768, -.001311240627, -.016440084789, -.079539677045, -.098702106258], p[.844486520435, -.269118885475, .028218347056, -.016482622720, -.079552050499, -.092141549962])), a=1.2, v=0.05)
      movel(pose_add(get_forward_kin(), pose_sub(p[.510565618204, .083102082347, -.005145063544, -.016556265222, -.079559581967, -.098660716249], p[.479677223496, -.227215340038, -.001311594755, -.016426905687, -.079516019992, -.098725476872])), a=1.2, v=0.05)
      movel(pose_add(get_forward_kin(), pose_sub(p[.528519938109, .084749809304, -.022975357583, -.016436473303, -.079547623069, -.098791094969], p[.510541138899, .083100431636, -.005152719696, -.016534351219, -.079520116203, -.098682104040])), a=1.2, v=0.05)
      movel(pose_add(get_forward_kin(), pose_sub(p[.539721048493, .081768739348, -.167974944302, -.016532014606, -.079616433524, -.098766317406], p[.528569833867, .084738469406, -.023348394093, -.016578871019, -.079461019781, -.098816507392])), a=1.2, v=0.05)
      set_standard_digital_out(0, True)
      sleep(2.0)
      movel(pose_add(get_forward_kin(), pose_sub(p[.525090567706, .085746256697, .019635298948, -.016603650023, -.079475545508, -.098646814778], p[.539594273683, .081963396680, -.163894479056, -.016479556210, -.079584750465, -.098704376594])), a=1.2, v=0.05)
      movej([0.2898976595413996, -2.0907223107341375, -2.5185725835239765, -1.6107448956676924, 0.28920811744611585, 4.932413531649132], a=1.3962634015954636, v=1.0471975511965976)
      movej([0.5649981442591315, -2.0912153666722073, -2.506361040912911, -1.6511397633621527, 0.5640064881758765, 4.965000554505918], a=1.3962634015954636, v=1.0471975511965976)
      movej([0.5620939213512619, -2.403216756073614, -2.4499683057322597, -1.393437386134714, 0.560382957808021, 4.962507017134994], a=1.3962634015954636, v=1.0471975511965976)
      set_standard_digital_out(0, False)
      sleep(2.0)
      movej([0.5649950796552982, -2.091544597824341, -2.5063015339818318, -1.6508678297956862, 0.5640026645420134, 4.964997923267054], a=1.3962634015954636, v=1.0471975511965976)
    end
  end
  def Recta__referencia():
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], refer1), a=1.2, v=0.5)
    global r1= get_actual_tcp_pose ()
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], refer2), a=1.2, v=0.5)
    global r2= get_actual_tcp_pose ()
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], refer1), a=1.2, v=0.5)
  end
  def Orientacion():
    def calcular_angulo(u,v):
    coseno=(u[0]*v[0]+v[1]*u[1])/(sqrt(pow(u[0],2)+pow(u[1],2))*sqrt(pow(v[0],2)+pow(v[1],2)))
    thetaa=acos(coseno)
    return thetaa
    end
    global v=[y2[0]-y1[0],y2[1]-y1[1]]
    global u=[r2[0]-r1[0],r2[1]-r1[1]]
    global theta=calcular_angulo(u,v)
    global theta=theta
    aa[4]=aa[4]+theta
    movej(aa, a=1.3962634015954636, v=1.0471975511965976)
    global b= get_actual_tcp_pose ()
    global ptoint=p[ptoint[0]+0.045,ptoint[1]+0.045,retro2[2],b[3],b[4],b[5]]
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], ptoint), a=1.2, v=0.3)
    global var_1= get_actual_tcp_pose ()
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], var_1), a=1.2, v=0.3)
  end
  def pantalla1():
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], refer1), a=1.2, v=0.05)
    global var_3= get_actual_tcp_pose ()
    var_3[0]=var_3[0]+0.1
    thread Thread_while_116():
      while (True):
        movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], var_3), a=1.2, v=0.05)
      end
    end
    if (get_standard_digital_in(3)==  False  ):
      global thread_handler_116=run Thread_while_116()
      while (get_standard_digital_in(3)==  False  ):
        sync()
      end
      kill thread_handler_116
    end
    global y1= get_actual_tcp_pose ()
    sleep(1.0)
    global retro1=y1
    retro1[0]=retro1[0]-0.009
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro1), a=1.2, v=0.2)
    sleep(1.0)
    retro1[1]=retro1[1]+0.02
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro1), a=1.2, v=0.2)
    sleep(1.0)
    retro1[0]=retro1[0]+0.05
    thread Thread_while_132():
      while (True):
        movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro1), a=1.2, v=0.05)
      end
    end
    if (get_standard_digital_in(3)==  False  ):
      global thread_handler_132=run Thread_while_132()
      while (get_standard_digital_in(3)==  False  ):
        sync()
      end
      kill thread_handler_132
    end
    global y2= get_actual_tcp_pose ()
    sleep(1.0)
    retro1[0]=retro1[0]-0.35
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro1), a=1.2, v=0.05)
  end
  def pantalla2():
    p2_1[1]=p2_1[1]+0.15
    thread Thread_while_142():
      while (True):
        movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], p2_1), a=1.2, v=0.05)
      end
    end
    if (get_standard_digital_in(3)==  False  ):
      global thread_handler_142=run Thread_while_142()
      while (get_standard_digital_in(3)==  False  ):
        sync()
      end
      kill thread_handler_142
    end
    global x1= get_actual_tcp_pose ()
    sleep(1.0)
    global retro2=x1
    retro2[1]=retro2[1]-0.009
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro2), a=1.2, v=0.2)
    sleep(1.0)
    retro2[0]=retro2[0]+0.01
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro2), a=1.2, v=0.2)
    sleep(1.0)
    retro2[1]=retro2[1]+0.05
    thread Thread_while_158():
      while (True):
        movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro2), a=1.2, v=0.05)
      end
    end
    if (get_standard_digital_in(3)==  False  ):
      global thread_handler_158=run Thread_while_158()
      while (get_standard_digital_in(3)==  False  ):
        sync()
      end
      kill thread_handler_158
    end
    global x2= get_actual_tcp_pose ()
    retro2[1]=retro2[1]-0.05
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro2), a=1.2, v=0.05)
    sleep(1.0)
    retro2[2]=retro2[2]+0.1
    movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], retro2), a=1.2, v=0.05)
  end
  def paso_intermedio():
    set_tcp(p[0.0,0.0,0.0,-0.004126568203085262,-0.013723695463132752,2.874234475198318])
    movej(giro_ini, a=1.3962634015954636, v=1.0471975511965976)
    global giroini= get_actual_tcp_pose ()
    giroini[0]=giroini[0]+0.44
    global refer1=giroini
    giroini[1]=giroini[1]+0.017
    global refer2=giroini
  end
  def homepose():
    movel([0.42090041778341725, -2.2747073523201333, -2.6294591645413274, -1.3778951637336352, -1.1589668083788656, 1.841386033953409], a=1.2, v=0.1)
    movel([0.4208120282388981, -2.259555650531273, -2.631936289636478, -1.3905449163106347, -1.1590372014251251, 1.841323770276663], a=1.2, v=0.1)
    global giro_ini= get_actual_joint_positions ()
    giro_ini[4]=giro_ini[4]+1.57
  end
  $ 1 "BeforeStart"
  $ 2 "Set DO[0]=Encender"
  set_standard_digital_out(0, True)
  $ 3 "Wait AGV==4"
  while (not(modbus_get_signal_status("AGV")==4)):
    sync()
  end
  while (True):
    $ 4 "Robot Program"
    $ 5 "If AGV≠4"
    if (modbus_get_signal_status("AGV") != 4):
      $ 6 "Halt"
      halt
    end
    $ 7 "Call homepose"
    homepose()
    $ 8 "Call paso_intermedio"
    paso_intermedio()
    $ 9 "Call Recta__referencia"
    Recta__referencia()
    $ 10 "Call pantalla1"
    pantalla1()
    $ 11 "Call paso_intermedio2"
    paso_intermedio2()
    $ 12 "Call pantalla2"
    pantalla2()
    $ 13 "Call ptointerseccion"
    ptointerseccion()
    $ 14 "Call Orientacion"
    Orientacion()
    $ 15 "Call Buscar_plataforma"
    Buscar_plataforma()
    $ 16 "Call paso_intermedi"
    paso_intermedi()
  end
end